import os
from dotenv import load_dotenv
from qdrant_client import QdrantClient
from qdrant_client.http import models as rest

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
load_dotenv()

COLLECTION_NAME = os.getenv("COLLECTION_NAME", "Family_Law")
QDRANT_URL = os.getenv("QDRANT_URL")
QDRANT_API_KEY = os.getenv("QDRANT_API_KEY")

# K·∫øt n·ªëi t·ªõi Qdrant Cloud
client = QdrantClient(
    url=QDRANT_URL,
    api_key=QDRANT_API_KEY,
    timeout=120
)

indexes = [
    ("article_no", rest.PayloadSchemaType.INTEGER),   # ƒêi·ªÅu s·ªë m·∫•y
    ("clause_no", rest.PayloadSchemaType.INTEGER),    # Kho·∫£n s·ªë m·∫•y
    ("point_letter", rest.PayloadSchemaType.KEYWORD), # ƒêi·ªÉm a, b, c...
    ("chapter_number", rest.PayloadSchemaType.INTEGER), # Ch∆∞∆°ng s·ªë m·∫•y
    ("point_id", rest.PayloadSchemaType.KEYWORD),     # V√≠ d·ª•: dieu_50_khoan_1_diem_b
]


for field, schema in indexes:
    try:
        client.create_payload_index(
            collection_name=COLLECTION_NAME,
            field_name=field,
            field_schema=schema,
        )
        print(f"‚úÖ Created index for {field} ({schema})")
    except Exception as e:
        print(f"‚ö†Ô∏è Failed to create index for {field}: {e}")

print("üéâ Done.")
